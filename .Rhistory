####################C#################
# Fit a Cox proportional hazards model
#create new dataframe with the relevant columsn only
df <- x[, c("time")]
####################C#################
# Fit a Cox proportional hazards model
#create new dataframe with the relevant columsn only
df <- x[, c("time", "status")]
View(df)
View(after_release)
View(after_release)
####################C#################
# Fit a Cox proportional hazards model
#create new dataframe with the relevant columsn only
df <- x[, c("time", "status", "sex", "state", "age", "T.categ")]
View(df)
####################C#################
# Fit a Cox proportional hazards model
#create new dataframe with the relevant columsn only
df <- after_release[, c("time", "status", "sex", "state", "age", "T.categ")]
df <- after_release[, c("time", "status", "sex", "state", "age", "T.categ")]
fit4 <- coxph(formula = Surv(time, status) ~ .,
data = df)
print(fit4)
summary(fit4)
fit4 <- coxph(formula = Surv(time, status) ~ age,
data = df)
print(fit4)
summary(fit4)
library(survival)
# Load the GBSG2 data
library(TH.data)
data("GBSG2")
?GBSG2
GBSG2
# Change tumor grade to unordered for interpretation
GBSG2$tgrade <- factor(GBSG2$tgrade,ordered=FALSE)
df$age <- factor(df$age, ordered = FALSE)
fit4 <- coxph(formula = Surv(time, status) ~ age,
data = df)
print(fit4)
summary(fit4)
# Change tumor grade to unordered for interpretation
GBSG2$tgrade <- factor(GBSG2$tgrade,ordered=FALSE)
# Fit a Cox proportional hazards model
fit <- coxph(formula = Surv(time, cens) ~ ., data = GBSG2)
# Examine the fit
print(fit)
summary(fit)
df <- after_release[, c("time", "status", "sex", "state", "age", "T.categ")]
df$state <- factor(df$state, ordered = FALSE)
df$T.categ <- factor(df$sT.categ, ordered = FALSE)
fit4 <- coxph(formula = Surv(time, status) ~ age,
data = df)
print(fit4)
fit4 <- coxph(formula = Surv(time, status) ~ .,
data = df)
print(fit4)
View(GBSG2)
df$age <- as.numeric(df$age)
df$T.categ <- factor(df$sT.categ, ordered = FALSE)
fit4 <- coxph(formula = Surv(time, status) ~ .,
data = df)
print(fit4)
# Change tumor grade to unordered for interpretation
GBSG2$tgrade <- factor(GBSG2$tgrade,ordered=FALSE)
# Fit a Cox proportional hazards model
fit <- coxph(formula = Surv(time, cens) ~ ., data = GBSG2)
# Examine the fit
print(fit)
View(GBSG2)
df <- after_release[, c("time", "status", "sex", "state", "age", "T.categ")]
#df$state <- factor(df$state, ordered = FALSE)
df$age <- as.numeric(df$age)
#df$T.categ <- factor(df$sT.categ, ordered = FALSE)
fit4 <- coxph(formula = Surv(time, status) ~ .,
data = df)
print(fit4)
df <- after_release[, c("time", "status", "sex", "state", "age", "T.categ")]
#df$state <- factor(df$state, ordered = FALSE)
df$age <- as.numeric(df$age)
df$T.categ <- factor(df$sT.categ, ordered = FALSE)
fit4 <- coxph(formula = Surv(time, status) ~ .,
data = df)
print(fit4)
summary(fit4)
fit4 <- coxph(formula = Surv(time, status) ~ .,
data = df)
#print(fit4)
summary(fit4)
fit4 <- coxph(formula = Surv(time, status) ~ T.categ,
data = df)
#print(fit4)
summary(fit4)
# Fit a Cox proportional hazards model
fit <- coxph(formula = Surv(time, cens) ~ ., data = GBSG2)
# Examine the fit
print(fit)
View(GBSG2)
df$state <- factor(df$state, ordered = FALSE)
df$age <- as.numeric(df$age)
df$T.categ <- factor(df$T.categ, ordered = FALSE)
fit4 <- coxph(formula = Surv(time, status) ~ .,
data = df)
#print(fit4)
summary(fit4)
df <- after_release[, c("time", "status", "sex", "state", "age", "T.categ")]
df$state <- factor(df$state, ordered = TRUE)
df$age <- as.numeric(df$age)
df$T.categ <- factor(df$T.categ, ordered = TRUE)
fit4 <- coxph(formula = Surv(time, status) ~ .,
data = df)
#print(fit4)
summary(fit4)
fit4 <- coxph(formula = Surv(time, status) ~ sex,
data = df)
#print(fit4)
summary(fit4)
df <- after_release[, c("time", "status", "sex", "state", "age", "T.categ")]
df$state <- factor(df$state, ordered = FALSE)
df$age <- as.numeric(df$age)
df$T.categ <- factor(df$T.categ, ordered = FALSE)
fit4 <- coxph(formula = Surv(time, status) ~ sex,
data = df)
#print(fit4)
summary(fit4)
fit4 <- coxph(formula = Surv(time, status) ~ age,
data = df)
#print(fit4)
summary(fit4)
fit4 <- coxph(formula = Surv(time, status) ~ state,
data = df)
#print(fit4)
summary(fit4)
df$T.categ <- factor(df$T.categ, ordered = FALSE)
fit4 <- coxph(formula = Surv(time, status) ~ T.categ,
data = df)
#print(fit4)
summary(fit4)
rexp(100, rate = 0.4)
x = rexp(100, rate = 0.4)
plot(x)
hist(x)
hist(x, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
data = rexp(100, rate = 0.4)
hist(x, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
View(result)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
data = rexp(100, rate = 0.4)
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
hist(data, breaks = 50)
lklh.exp<- function(x, theta) theta*exp(-theta*x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}
result <- optim(par = 0.5, log.lklh.exp, x = data)
theta <- result$par
x_dexp <- seq(0, 1, by = 0.02)
curve(dexp(x_dexp, rate = theta), col = 2, lty = 2, lwd = 2, add = TRUE)
curve(dexp(x_dexp, rate = theta), col = 2, lty = 2, lwd = 2, add = TRUE)
x_dexp <- seq(0, 1, by = 0.02)
hist(data, breaks = 50)
curve(dexp(x_dexp, rate = theta), col = 2, lty = 2, lwd = 2, add = TRUE)
x_dexp <- seq(0, 1, by = 0.02)
hist(data, breaks = 50)
plot(dexp(x_dexp, rate = theta), col = 2, lty = 2, lwd = 2, add = TRUE)
hist(data, breaks = 50)
line(dexp(x_dexp, rate = theta), col = 2, lty = 2, lwd = 2, add = TRUE)
hist(data, breaks = 50)
line(dexp(x_dexp, rate = theta))
hist(data, breaks = 50)
curve(dexp(x, rate = 0.09), col = 2, lty = 2, lwd = 2, add = TRUE)
hist(data, breaks = 50, density = TRUE)
curve(dexp(x, rate = 0.09), col = 2, lty = 2, lwd = 2, add = TRUE)
curve(dexp(x, rate = 0.09), col = 2, lty = 2, lwd = 2, add = TRUE)
curve(dexp(x, rate = theta), col = 2, lty = 2, lwd = 2, add = TRUE)
hist(data, breaks = 50, prob = TRUE)
curve(dexp(x, rate = theta), col = 2, lty = 2, lwd = 2, add = TRUE)
result <- optim(par = 0.2, log.lklh.exp, x = data)
theta <- result$par
result <- optim(par = 2.5, log.lklh.exp, x = data)
theta <- result$par
View(result)
result$convergence
View(result)
result <- optim(par = 2.5, log.lklh.exp, x = data, method = 'Brent')
result <- optim(par = 2.5, log.lklh.exp, x = data, method = "BFGS")
theta <- result$par
result$convergence
View(result)
hist(data, breaks = 50, prob = TRUE)
curve(dexp(x, rate = theta), col = 2, lty = 2, lwd = 2, add = TRUE
result <- optim(par = 2.5, log.lklh.exp, x = data)
theta <- result$par
hist(data, breaks = 50, prob = TRUE)
curve(dexp(x, rate = theta), col = 2, lty = 2, lwd = 2, add = TRUE
hist(data, breaks = 50, prob = TRUE)
curve(dexp(x, rate = theta), col = 2, lty = 2, lwd = 2, add = TRUE)
result <- optim(par = 2.5, log.lklh.exp, x = data, method = "BFGS")
theta <- result$par
hist(data, breaks = 50, prob = TRUE)
curve(dexp(x, rate = theta), col = 2, lty = 2, lwd = 2, add = TRUE)
results
result
result$residual
fit1 <- fitdistr(data, "exponential")
library(MASS)
fit1 <- fitdistr(data, "exponential")
View(fit1)
summary(fit1)
View(result)
se <- sqrt(diag(vcov(fit)))
se <- sqrt(diag(vcov(fit1)))
data2 <- data > 3
data[data2]
data2 <- data[data2]
hist(data2)
yi <- zeros(100)
yi <- rep(NA, 100)
for (i in 1:100){
print(i)
}
for (i in 1:100){
print(i)
}
for (i in 1:100){
yi[i] = 1
}
yi <- rep(NA, 100)
yi <- rep(NA, 100)
for (i in 1:100){
if data[i] > 3{
y[i] = 1
}
else{
yi[i] = 0
}
}
for (i in 1:100){
if (data[i] > 3){
y[i] = 1
}
else{
yi[i] = 0
}
}
for (i in 1:100){
if (data[i] > 3){
yi[i] = 1
}
else{
yi[i] = 0
}
}
hist(yi)
yi
yi <- rep(NA, 100)
for (i in 1:100){
if (data[i] > 3){
yi[i] = 1
}
else{
yi[i] = 0
}
}
hist(yi)
log(0.7)/3
log(0.7)/-3
lklh.exp<- function(x, theta) sum(exp(-3*theta)^x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}res
result <- optim(par = 2.5, log.lklh.exp, x = data, method = "BFGS")
theta <- result$par
clear
lklh.exp<- function(x, theta) sum(exp(-3*theta)^x)
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}res
result <- optim(par = 2.5, log.lklh.exp, x = data, method = "BFGS")
theta <- result$par
theta
result <- optim(par = 2.5, log.lklh.exp, x = data, method = "BFGS")
View(result)
View(result)
lklh.exp<- function(x, theta) sum(exp(-3*theta)^x * (1 - exp(-3 * theta)^(1 - x)))
log.lklh.exp <- function(x, theta) {
-sum(log(theta)-theta*x)
}res
result <- optim(par = 2.5, log.lklh.exp, x = data, method = "BFGS")
View(result)
lklh.exp<- function(x, theta) sum(exp(-3*theta)^x * (1 - exp(-3 * theta)^(1 - x)))
log.lklh.exp <- function(x, theta) {
-sum((1-x)*log(1-exp(-3*theta))-3*theta)
}res
lklh.exp<- function(x, theta) sum(exp(-3*theta)^x * (1 - exp(-3 * theta)^(1 - x)))
log.lklh.exp <- function(x, theta) {
-sum((1-x)*log(1-exp(-3*theta))-3*theta)
}
result <- optim(par = 2.5, log.lklh.exp, x = data, method = "BFGS")
result <- optim(par = 2.5, log.lklh.exp, x = yi)
theta
View(result)
View(result)
load("~/Documents/PhD courses/Stochastic Modelling/Assignment 4/Brexitvotes.Rdata")
View(divisions)
labels
View(divisions)
View(divisions)
View(divisions)
View(divisions)
setwd("~/Documents/GitHub/PhdDataImputation")
